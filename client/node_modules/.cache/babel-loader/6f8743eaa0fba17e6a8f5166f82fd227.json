{"ast":null,"code":"import { useState, useCallback } from \"react\";\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\n    setLoading(true);\n\n    try {\n      const response = await fetch(url, {\n        method,\n        body,\n        headers\n      });\n      const data = response.json();\n\n      if (!response.ok) {\n        throw new Error(data.message || \"Something is wrong\");\n        setLoading(false);\n      }\n\n      return data;\n    } catch (e) {\n      setLoading(false);\n      setError(e.message);\n      throw e;\n    }\n  }, []);\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  return {\n    loading,\n    request,\n    error,\n    clearError\n  };\n};","map":{"version":3,"sources":["/Users/andreigutan/Desktop/Project/mern-app/client/src/hooks/http.hook.js"],"names":["useState","useCallback","useHttp","loading","setLoading","error","setError","request","url","method","body","headers","response","fetch","data","json","ok","Error","message","e","clearError"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,QAAsC,OAAtC;AAEA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMO,OAAO,GAAGN,WAAW,CACzB,OAAOO,GAAP,EAAYC,MAAM,GAAG,KAArB,EAA4BC,IAAI,GAAG,IAAnC,EAAyCC,OAAO,GAAG,EAAnD,KAA0D;AACxDP,IAAAA,UAAU,CAAC,IAAD,CAAV;;AACA,QAAI;AACF,YAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAACL,GAAD,EAAM;AAChCC,QAAAA,MADgC;AAEhCC,QAAAA,IAFgC;AAGhCC,QAAAA;AAHgC,OAAN,CAA5B;AAKA,YAAMG,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;;AACA,UAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,oBAA1B,CAAN;AACAd,QAAAA,UAAU,CAAC,KAAD,CAAV;AACD;;AACD,aAAOU,IAAP;AACD,KAZD,CAYE,OAAOK,CAAP,EAAU;AACVf,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAE,MAAAA,QAAQ,CAACa,CAAC,CAACD,OAAH,CAAR;AACA,YAAMC,CAAN;AACD;AACF,GApBwB,EAqBzB,EArByB,CAA3B;;AAuBA,QAAMC,UAAU,GAAG,MAAM;AACvBd,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,GAFD;;AAGA,SAAO;AAAEH,IAAAA,OAAF;AAAWI,IAAAA,OAAX;AAAoBF,IAAAA,KAApB;AAA2Be,IAAAA;AAA3B,GAAP;AACD,CA9BM","sourcesContent":["import { useState, useCallback } from \"react\";\n\nexport const useHttp = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const request = useCallback(\n    async (url, method = \"GET\", body = null, headers = {}) => {\n      setLoading(true);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n        });\n        const data = response.json();\n        if (!response.ok) {\n          throw new Error(data.message || \"Something is wrong\");\n          setLoading(false);\n        }\n        return data;\n      } catch (e) {\n        setLoading(false);\n        setError(e.message);\n        throw e;\n      }\n    },\n    []\n  );\n  const clearError = () => {\n    setError(null);\n  };\n  return { loading, request, error, clearError };\n};\n"]},"metadata":{},"sourceType":"module"}